{"ast":null,"code":"import { useEffect, useRef } from 'react';\nimport { useChatContext } from '../../../context/ChatContext';\nexport function useMessageListScrollManager(params) {\n  var onScrollBy = params.onScrollBy,\n      scrollContainerMeasures = params.scrollContainerMeasures,\n      scrolledUpThreshold = params.scrolledUpThreshold,\n      scrollToBottom = params.scrollToBottom,\n      showNewMessages = params.showNewMessages;\n  var client = useChatContext('useMessageListScrollManager').client;\n  var measures = useRef({\n    offsetHeight: 0,\n    scrollHeight: 0\n  });\n  var messages = useRef();\n  var scrollTop = useRef(0);\n  useEffect(function () {\n    var _a, _b, _c;\n\n    var prevMeasures = measures.current;\n    var prevMessages = messages.current;\n    var newMessages = params.messages;\n    var lastNewMessage = newMessages[newMessages.length - 1] || {};\n    var lastPrevMessage = prevMessages === null || prevMessages === void 0 ? void 0 : prevMessages[prevMessages.length - 1];\n    var newMeasures = scrollContainerMeasures();\n    var wasAtBottom = prevMeasures.scrollHeight - prevMeasures.offsetHeight - scrollTop.current < scrolledUpThreshold;\n\n    if (typeof prevMessages !== 'undefined') {\n      if (prevMessages.length < newMessages.length) {\n        // messages added to the top\n        if ((lastPrevMessage === null || lastPrevMessage === void 0 ? void 0 : lastPrevMessage.id) === lastNewMessage.id) {\n          var listHeightDelta = newMeasures.scrollHeight - prevMeasures.scrollHeight;\n          onScrollBy(listHeightDelta);\n        } // messages added to the bottom\n        else {\n          var lastMessageIsFromCurrentUser = ((_a = lastNewMessage.user) === null || _a === void 0 ? void 0 : _a.id) === client.userID;\n\n          if (lastMessageIsFromCurrentUser || wasAtBottom) {\n            scrollToBottom();\n          } else {\n            showNewMessages();\n          }\n        }\n      } // message list length didn't change, but check if last message had reaction/reply update\n      else {\n        var hasNewReactions = ((_b = lastPrevMessage === null || lastPrevMessage === void 0 ? void 0 : lastPrevMessage.latest_reactions) === null || _b === void 0 ? void 0 : _b.length) !== ((_c = lastNewMessage.latest_reactions) === null || _c === void 0 ? void 0 : _c.length);\n        var hasNewReplies = (lastPrevMessage === null || lastPrevMessage === void 0 ? void 0 : lastPrevMessage.reply_count) !== lastNewMessage.reply_count;\n\n        if ((hasNewReactions || hasNewReplies) && wasAtBottom) {\n          scrollToBottom();\n        }\n      }\n    }\n\n    messages.current = newMessages;\n    measures.current = newMeasures;\n  }, [measures, messages, params.messages]);\n  return function (scrollTopValue) {\n    scrollTop.current = scrollTopValue;\n  };\n}","map":{"version":3,"names":["useEffect","useRef","useChatContext","useMessageListScrollManager","params","onScrollBy","scrollContainerMeasures","scrolledUpThreshold","scrollToBottom","showNewMessages","client","measures","offsetHeight","scrollHeight","messages","scrollTop","_a","_b","_c","prevMeasures","current","prevMessages","newMessages","lastNewMessage","length","lastPrevMessage","newMeasures","wasAtBottom","id","listHeightDelta","lastMessageIsFromCurrentUser","user","userID","hasNewReactions","latest_reactions","hasNewReplies","reply_count","scrollTopValue"],"sources":["/Users/cherrie/Desktop/messenger_ver_2/client/node_modules/stream-chat-react/dist/components/MessageList/hooks/useMessageListScrollManager.js"],"sourcesContent":["import { useEffect, useRef } from 'react';\nimport { useChatContext } from '../../../context/ChatContext';\nexport function useMessageListScrollManager(params) {\n    var onScrollBy = params.onScrollBy, scrollContainerMeasures = params.scrollContainerMeasures, scrolledUpThreshold = params.scrolledUpThreshold, scrollToBottom = params.scrollToBottom, showNewMessages = params.showNewMessages;\n    var client = useChatContext('useMessageListScrollManager').client;\n    var measures = useRef({\n        offsetHeight: 0,\n        scrollHeight: 0,\n    });\n    var messages = useRef();\n    var scrollTop = useRef(0);\n    useEffect(function () {\n        var _a, _b, _c;\n        var prevMeasures = measures.current;\n        var prevMessages = messages.current;\n        var newMessages = params.messages;\n        var lastNewMessage = newMessages[newMessages.length - 1] || {};\n        var lastPrevMessage = prevMessages === null || prevMessages === void 0 ? void 0 : prevMessages[prevMessages.length - 1];\n        var newMeasures = scrollContainerMeasures();\n        var wasAtBottom = prevMeasures.scrollHeight - prevMeasures.offsetHeight - scrollTop.current <\n            scrolledUpThreshold;\n        if (typeof prevMessages !== 'undefined') {\n            if (prevMessages.length < newMessages.length) {\n                // messages added to the top\n                if ((lastPrevMessage === null || lastPrevMessage === void 0 ? void 0 : lastPrevMessage.id) === lastNewMessage.id) {\n                    var listHeightDelta = newMeasures.scrollHeight - prevMeasures.scrollHeight;\n                    onScrollBy(listHeightDelta);\n                }\n                // messages added to the bottom\n                else {\n                    var lastMessageIsFromCurrentUser = ((_a = lastNewMessage.user) === null || _a === void 0 ? void 0 : _a.id) === client.userID;\n                    if (lastMessageIsFromCurrentUser || wasAtBottom) {\n                        scrollToBottom();\n                    }\n                    else {\n                        showNewMessages();\n                    }\n                }\n            }\n            // message list length didn't change, but check if last message had reaction/reply update\n            else {\n                var hasNewReactions = ((_b = lastPrevMessage === null || lastPrevMessage === void 0 ? void 0 : lastPrevMessage.latest_reactions) === null || _b === void 0 ? void 0 : _b.length) !== ((_c = lastNewMessage.latest_reactions) === null || _c === void 0 ? void 0 : _c.length);\n                var hasNewReplies = (lastPrevMessage === null || lastPrevMessage === void 0 ? void 0 : lastPrevMessage.reply_count) !== lastNewMessage.reply_count;\n                if ((hasNewReactions || hasNewReplies) && wasAtBottom) {\n                    scrollToBottom();\n                }\n            }\n        }\n        messages.current = newMessages;\n        measures.current = newMeasures;\n    }, [measures, messages, params.messages]);\n    return function (scrollTopValue) {\n        scrollTop.current = scrollTopValue;\n    };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}