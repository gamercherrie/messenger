{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from) {\n  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) to[j] = from[i];\n\n  return to;\n};\n\nexport var channelReducer = function (state, action) {\n  var _a;\n\n  switch (action.type) {\n    case 'closeThread':\n      {\n        return __assign(__assign({}, state), {\n          thread: null,\n          threadLoadingMore: false,\n          threadMessages: []\n        });\n      }\n\n    case 'copyMessagesFromChannel':\n      {\n        var channel = action.channel,\n            parentId = action.parentId;\n        return __assign(__assign({}, state), {\n          messages: __spreadArray([], channel.state.messages),\n          pinnedMessages: __spreadArray([], channel.state.pinnedMessages),\n          // copying messages from channel happens with new message - this resets the suppressAutoscroll\n          suppressAutoscroll: false,\n          threadMessages: parentId ? __assign({}, channel.state.threads)[parentId] || [] : state.threadMessages\n        });\n      }\n\n    case 'copyStateFromChannelOnEvent':\n      {\n        var channel = action.channel;\n        return __assign(__assign({}, state), {\n          members: __assign({}, channel.state.members),\n          messages: __spreadArray([], channel.state.messages),\n          pinnedMessages: __spreadArray([], channel.state.pinnedMessages),\n          read: __assign({}, channel.state.read),\n          watcherCount: channel.state.watcher_count,\n          watchers: __assign({}, channel.state.watchers)\n        });\n      }\n\n    case 'initStateFromChannel':\n      {\n        var channel = action.channel;\n        return __assign(__assign({}, state), {\n          loading: false,\n          members: __assign({}, channel.state.members),\n          messages: __spreadArray([], channel.state.messages),\n          pinnedMessages: __spreadArray([], channel.state.pinnedMessages),\n          read: __assign({}, channel.state.read),\n          watcherCount: channel.state.watcher_count,\n          watchers: __assign({}, channel.state.watchers)\n        });\n      }\n\n    case 'jumpToLatestMessage':\n      {\n        return __assign(__assign({}, state), {\n          hasMoreNewer: false,\n          highlightedMessageId: undefined,\n          loading: false,\n          suppressAutoscroll: false\n        });\n      }\n\n    case 'jumpToMessageFinished':\n      {\n        return __assign(__assign({}, state), {\n          hasMoreNewer: action.hasMoreNewer,\n          highlightedMessageId: action.highlightedMessageId\n        });\n      }\n\n    case 'clearHighlightedMessage':\n      {\n        return __assign(__assign({}, state), {\n          highlightedMessageId: undefined\n        });\n      }\n\n    case 'loadMoreFinished':\n      {\n        var hasMore = action.hasMore,\n            messages = action.messages;\n        return __assign(__assign({}, state), {\n          hasMore: hasMore,\n          loadingMore: false,\n          messages: messages\n        });\n      }\n\n    case 'loadMoreNewerFinished':\n      {\n        var hasMoreNewer = action.hasMoreNewer,\n            messages = action.messages;\n        return __assign(__assign({}, state), {\n          hasMoreNewer: hasMoreNewer,\n          loadingMoreNewer: false,\n          messages: messages\n        });\n      }\n\n    case 'loadMoreThreadFinished':\n      {\n        var threadHasMore = action.threadHasMore,\n            threadMessages = action.threadMessages;\n        return __assign(__assign({}, state), {\n          threadHasMore: threadHasMore,\n          threadLoadingMore: false,\n          threadMessages: threadMessages\n        });\n      }\n\n    case 'openThread':\n      {\n        var channel = action.channel,\n            message = action.message;\n        return __assign(__assign({}, state), {\n          thread: message,\n          threadMessages: message.id ? __assign({}, channel.state.threads)[message.id] || [] : []\n        });\n      }\n\n    case 'setError':\n      {\n        var error = action.error;\n        return __assign(__assign({}, state), {\n          error: error\n        });\n      }\n\n    case 'setLoadingMore':\n      {\n        var loadingMore = action.loadingMore; // suppress the autoscroll behavior\n\n        return __assign(__assign({}, state), {\n          loadingMore: loadingMore,\n          suppressAutoscroll: true\n        });\n      }\n\n    case 'setLoadingMoreNewer':\n      {\n        var loadingMoreNewer = action.loadingMoreNewer;\n        return __assign(__assign({}, state), {\n          loadingMoreNewer: loadingMoreNewer\n        });\n      }\n\n    case 'setThread':\n      {\n        var message = action.message;\n        return __assign(__assign({}, state), {\n          thread: message\n        });\n      }\n\n    case 'setTyping':\n      {\n        var channel = action.channel;\n        return __assign(__assign({}, state), {\n          typing: __assign({}, channel.state.typing)\n        });\n      }\n\n    case 'startLoadingThread':\n      {\n        return __assign(__assign({}, state), {\n          threadLoadingMore: true\n        });\n      }\n\n    case 'updateThreadOnEvent':\n      {\n        var channel = action.channel,\n            message = action.message;\n        if (!state.thread) return state;\n        return __assign(__assign({}, state), {\n          thread: (message === null || message === void 0 ? void 0 : message.id) === state.thread.id ? channel.state.formatMessage(message) : state.thread,\n          threadMessages: ((_a = state.thread) === null || _a === void 0 ? void 0 : _a.id) ? __assign({}, channel.state.threads)[state.thread.id] || [] : []\n        });\n      }\n\n    default:\n      return state;\n  }\n};\nexport var initialState = {\n  error: null,\n  hasMore: true,\n  hasMoreNewer: false,\n  loading: true,\n  loadingMore: false,\n  members: {},\n  messages: [],\n  pinnedMessages: [],\n  read: {},\n  suppressAutoscroll: false,\n  thread: null,\n  threadHasMore: true,\n  threadLoadingMore: false,\n  threadMessages: [],\n  typing: {},\n  watcherCount: 0,\n  watchers: {}\n};","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__spreadArray","to","from","il","j","channelReducer","state","action","_a","type","thread","threadLoadingMore","threadMessages","channel","parentId","messages","pinnedMessages","suppressAutoscroll","threads","members","read","watcherCount","watcher_count","watchers","loading","hasMoreNewer","highlightedMessageId","undefined","hasMore","loadingMore","loadingMoreNewer","threadHasMore","message","id","error","typing","formatMessage","initialState"],"sources":["/Users/cherrie/Desktop/messenger_ver_2/node_modules/stream-chat-react/dist/components/Channel/channelState.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nexport var channelReducer = function (state, action) {\n    var _a;\n    switch (action.type) {\n        case 'closeThread': {\n            return __assign(__assign({}, state), { thread: null, threadLoadingMore: false, threadMessages: [] });\n        }\n        case 'copyMessagesFromChannel': {\n            var channel = action.channel, parentId = action.parentId;\n            return __assign(__assign({}, state), { messages: __spreadArray([], channel.state.messages), pinnedMessages: __spreadArray([], channel.state.pinnedMessages), \n                // copying messages from channel happens with new message - this resets the suppressAutoscroll\n                suppressAutoscroll: false, threadMessages: parentId\n                    ? __assign({}, channel.state.threads)[parentId] || []\n                    : state.threadMessages });\n        }\n        case 'copyStateFromChannelOnEvent': {\n            var channel = action.channel;\n            return __assign(__assign({}, state), { members: __assign({}, channel.state.members), messages: __spreadArray([], channel.state.messages), pinnedMessages: __spreadArray([], channel.state.pinnedMessages), read: __assign({}, channel.state.read), watcherCount: channel.state.watcher_count, watchers: __assign({}, channel.state.watchers) });\n        }\n        case 'initStateFromChannel': {\n            var channel = action.channel;\n            return __assign(__assign({}, state), { loading: false, members: __assign({}, channel.state.members), messages: __spreadArray([], channel.state.messages), pinnedMessages: __spreadArray([], channel.state.pinnedMessages), read: __assign({}, channel.state.read), watcherCount: channel.state.watcher_count, watchers: __assign({}, channel.state.watchers) });\n        }\n        case 'jumpToLatestMessage': {\n            return __assign(__assign({}, state), { hasMoreNewer: false, highlightedMessageId: undefined, loading: false, suppressAutoscroll: false });\n        }\n        case 'jumpToMessageFinished': {\n            return __assign(__assign({}, state), { hasMoreNewer: action.hasMoreNewer, highlightedMessageId: action.highlightedMessageId });\n        }\n        case 'clearHighlightedMessage': {\n            return __assign(__assign({}, state), { highlightedMessageId: undefined });\n        }\n        case 'loadMoreFinished': {\n            var hasMore = action.hasMore, messages = action.messages;\n            return __assign(__assign({}, state), { hasMore: hasMore, loadingMore: false, messages: messages });\n        }\n        case 'loadMoreNewerFinished': {\n            var hasMoreNewer = action.hasMoreNewer, messages = action.messages;\n            return __assign(__assign({}, state), { hasMoreNewer: hasMoreNewer, loadingMoreNewer: false, messages: messages });\n        }\n        case 'loadMoreThreadFinished': {\n            var threadHasMore = action.threadHasMore, threadMessages = action.threadMessages;\n            return __assign(__assign({}, state), { threadHasMore: threadHasMore, threadLoadingMore: false, threadMessages: threadMessages });\n        }\n        case 'openThread': {\n            var channel = action.channel, message = action.message;\n            return __assign(__assign({}, state), { thread: message, threadMessages: message.id ? __assign({}, channel.state.threads)[message.id] || [] : [] });\n        }\n        case 'setError': {\n            var error = action.error;\n            return __assign(__assign({}, state), { error: error });\n        }\n        case 'setLoadingMore': {\n            var loadingMore = action.loadingMore;\n            // suppress the autoscroll behavior\n            return __assign(__assign({}, state), { loadingMore: loadingMore, suppressAutoscroll: true });\n        }\n        case 'setLoadingMoreNewer': {\n            var loadingMoreNewer = action.loadingMoreNewer;\n            return __assign(__assign({}, state), { loadingMoreNewer: loadingMoreNewer });\n        }\n        case 'setThread': {\n            var message = action.message;\n            return __assign(__assign({}, state), { thread: message });\n        }\n        case 'setTyping': {\n            var channel = action.channel;\n            return __assign(__assign({}, state), { typing: __assign({}, channel.state.typing) });\n        }\n        case 'startLoadingThread': {\n            return __assign(__assign({}, state), { threadLoadingMore: true });\n        }\n        case 'updateThreadOnEvent': {\n            var channel = action.channel, message = action.message;\n            if (!state.thread)\n                return state;\n            return __assign(__assign({}, state), { thread: (message === null || message === void 0 ? void 0 : message.id) === state.thread.id ? channel.state.formatMessage(message) : state.thread, threadMessages: ((_a = state.thread) === null || _a === void 0 ? void 0 : _a.id) ? __assign({}, channel.state.threads)[state.thread.id] || [] : [] });\n        }\n        default:\n            return state;\n    }\n};\nexport var initialState = {\n    error: null,\n    hasMore: true,\n    hasMoreNewer: false,\n    loading: true,\n    loadingMore: false,\n    members: {},\n    messages: [],\n    pinnedMessages: [],\n    read: {},\n    suppressAutoscroll: false,\n    thread: null,\n    threadHasMore: true,\n    threadLoadingMore: false,\n    threadMessages: [],\n    typing: {},\n    watcherCount: 0,\n    watchers: {},\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}