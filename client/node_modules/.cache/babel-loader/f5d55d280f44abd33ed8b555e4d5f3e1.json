{"ast":null,"code":"var __spreadArray = this && this.__spreadArray || function (to, from) {\n  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) to[j] = from[i];\n\n  return to;\n};\n\nimport { nanoid } from 'nanoid';\nexport var makeAddNotifications = function (setNotifications, notificationTimeouts) {\n  return function (text, type) {\n    if (typeof text !== 'string' || type !== 'success' && type !== 'error') {\n      return;\n    }\n\n    var id = nanoid();\n    setNotifications(function (prevNotifications) {\n      return __spreadArray(__spreadArray([], prevNotifications), [{\n        id: id,\n        text: text,\n        type: type\n      }]);\n    });\n    var timeout = setTimeout(function () {\n      return setNotifications(function (prevNotifications) {\n        return prevNotifications.filter(function (notification) {\n          return notification.id !== id;\n        });\n      });\n    }, 5000);\n    notificationTimeouts.push(timeout);\n  };\n};","map":{"version":3,"names":["__spreadArray","to","from","i","il","length","j","nanoid","makeAddNotifications","setNotifications","notificationTimeouts","text","type","id","prevNotifications","timeout","setTimeout","filter","notification","push"],"sources":["/Users/cherrie/Desktop/messenger_ver_2/node_modules/stream-chat-react/dist/components/Channel/utils.js"],"sourcesContent":["var __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nimport { nanoid } from 'nanoid';\nexport var makeAddNotifications = function (setNotifications, notificationTimeouts) { return function (text, type) {\n    if (typeof text !== 'string' || (type !== 'success' && type !== 'error')) {\n        return;\n    }\n    var id = nanoid();\n    setNotifications(function (prevNotifications) { return __spreadArray(__spreadArray([], prevNotifications), [{ id: id, text: text, type: type }]); });\n    var timeout = setTimeout(function () {\n        return setNotifications(function (prevNotifications) {\n            return prevNotifications.filter(function (notification) { return notification.id !== id; });\n        });\n    }, 5000);\n    notificationTimeouts.push(timeout);\n}; };\n"],"mappings":"AAAA,IAAIA,aAAa,GAAI,QAAQ,KAAKA,aAAd,IAAgC,UAAUC,EAAV,EAAcC,IAAd,EAAoB;EACpE,KAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAGF,IAAI,CAACG,MAArB,EAA6BC,CAAC,GAAGL,EAAE,CAACI,MAAzC,EAAiDF,CAAC,GAAGC,EAArD,EAAyDD,CAAC,IAAIG,CAAC,EAA/D,EACIL,EAAE,CAACK,CAAD,CAAF,GAAQJ,IAAI,CAACC,CAAD,CAAZ;;EACJ,OAAOF,EAAP;AACH,CAJD;;AAKA,SAASM,MAAT,QAAuB,QAAvB;AACA,OAAO,IAAIC,oBAAoB,GAAG,UAAUC,gBAAV,EAA4BC,oBAA5B,EAAkD;EAAE,OAAO,UAAUC,IAAV,EAAgBC,IAAhB,EAAsB;IAC/G,IAAI,OAAOD,IAAP,KAAgB,QAAhB,IAA6BC,IAAI,KAAK,SAAT,IAAsBA,IAAI,KAAK,OAAhE,EAA0E;MACtE;IACH;;IACD,IAAIC,EAAE,GAAGN,MAAM,EAAf;IACAE,gBAAgB,CAAC,UAAUK,iBAAV,EAA6B;MAAE,OAAOd,aAAa,CAACA,aAAa,CAAC,EAAD,EAAKc,iBAAL,CAAd,EAAuC,CAAC;QAAED,EAAE,EAAEA,EAAN;QAAUF,IAAI,EAAEA,IAAhB;QAAsBC,IAAI,EAAEA;MAA5B,CAAD,CAAvC,CAApB;IAAmG,CAAnI,CAAhB;IACA,IAAIG,OAAO,GAAGC,UAAU,CAAC,YAAY;MACjC,OAAOP,gBAAgB,CAAC,UAAUK,iBAAV,EAA6B;QACjD,OAAOA,iBAAiB,CAACG,MAAlB,CAAyB,UAAUC,YAAV,EAAwB;UAAE,OAAOA,YAAY,CAACL,EAAb,KAAoBA,EAA3B;QAAgC,CAAnF,CAAP;MACH,CAFsB,CAAvB;IAGH,CAJuB,EAIrB,IAJqB,CAAxB;IAKAH,oBAAoB,CAACS,IAArB,CAA0BJ,OAA1B;EACH,CAZqF;AAYlF,CAZG"},"metadata":{},"sourceType":"module"}