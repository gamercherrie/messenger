{"ast":null,"code":"import React, { useMemo } from 'react';\nimport { useMessageContext } from '../../context/MessageContext';\nimport { isDate, useTranslationContext } from '../../context/TranslationContext';\nimport { getDateString } from '../../i18n/utils';\nexport var defaultTimestampFormat = 'h:mmA';\n\nvar UnMemoizedMessageTimestamp = function (props) {\n  var _a = props.calendar,\n      calendar = _a === void 0 ? false : _a,\n      _b = props.customClass,\n      customClass = _b === void 0 ? '' : _b,\n      _c = props.format,\n      format = _c === void 0 ? defaultTimestampFormat : _c,\n      propMessage = props.message;\n\n  var _d = useMessageContext('MessageTimestamp'),\n      formatDate = _d.formatDate,\n      contextMessage = _d.message;\n\n  var tDateTimeParser = useTranslationContext('MessageTimestamp').tDateTimeParser;\n  var message = propMessage || contextMessage;\n  var messageCreatedAt = message.created_at && isDate(message.created_at) ? message.created_at.toISOString() : message.created_at;\n  var when = useMemo(function () {\n    return getDateString({\n      calendar: calendar,\n      format: format,\n      formatDate: formatDate,\n      messageCreatedAt: messageCreatedAt,\n      tDateTimeParser: tDateTimeParser\n    });\n  }, [formatDate, calendar, tDateTimeParser, format, messageCreatedAt]);\n  if (!when) return null;\n  return React.createElement(\"time\", {\n    className: customClass,\n    dateTime: messageCreatedAt,\n    title: messageCreatedAt\n  }, when);\n};\n\nexport var MessageTimestamp = React.memo(UnMemoizedMessageTimestamp);","map":{"version":3,"names":["React","useMemo","useMessageContext","isDate","useTranslationContext","getDateString","defaultTimestampFormat","UnMemoizedMessageTimestamp","props","_a","calendar","_b","customClass","_c","format","propMessage","message","_d","formatDate","contextMessage","tDateTimeParser","messageCreatedAt","created_at","toISOString","when","createElement","className","dateTime","title","MessageTimestamp","memo"],"sources":["/Users/cherrie/Desktop/messenger_ver_2/node_modules/stream-chat-react/dist/components/Message/MessageTimestamp.js"],"sourcesContent":["import React, { useMemo } from 'react';\nimport { useMessageContext } from '../../context/MessageContext';\nimport { isDate, useTranslationContext } from '../../context/TranslationContext';\nimport { getDateString } from '../../i18n/utils';\nexport var defaultTimestampFormat = 'h:mmA';\nvar UnMemoizedMessageTimestamp = function (props) {\n    var _a = props.calendar, calendar = _a === void 0 ? false : _a, _b = props.customClass, customClass = _b === void 0 ? '' : _b, _c = props.format, format = _c === void 0 ? defaultTimestampFormat : _c, propMessage = props.message;\n    var _d = useMessageContext('MessageTimestamp'), formatDate = _d.formatDate, contextMessage = _d.message;\n    var tDateTimeParser = useTranslationContext('MessageTimestamp').tDateTimeParser;\n    var message = propMessage || contextMessage;\n    var messageCreatedAt = message.created_at && isDate(message.created_at)\n        ? message.created_at.toISOString()\n        : message.created_at;\n    var when = useMemo(function () { return getDateString({ calendar: calendar, format: format, formatDate: formatDate, messageCreatedAt: messageCreatedAt, tDateTimeParser: tDateTimeParser }); }, [formatDate, calendar, tDateTimeParser, format, messageCreatedAt]);\n    if (!when)\n        return null;\n    return (React.createElement(\"time\", { className: customClass, dateTime: messageCreatedAt, title: messageCreatedAt }, when));\n};\nexport var MessageTimestamp = React.memo(UnMemoizedMessageTimestamp);\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,iBAAT,QAAkC,8BAAlC;AACA,SAASC,MAAT,EAAiBC,qBAAjB,QAA8C,kCAA9C;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAO,IAAIC,sBAAsB,GAAG,OAA7B;;AACP,IAAIC,0BAA0B,GAAG,UAAUC,KAAV,EAAiB;EAC9C,IAAIC,EAAE,GAAGD,KAAK,CAACE,QAAf;EAAA,IAAyBA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,KAAhB,GAAwBA,EAA5D;EAAA,IAAgEE,EAAE,GAAGH,KAAK,CAACI,WAA3E;EAAA,IAAwFA,WAAW,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,EAAhB,GAAqBA,EAA3H;EAAA,IAA+HE,EAAE,GAAGL,KAAK,CAACM,MAA1I;EAAA,IAAkJA,MAAM,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgBP,sBAAhB,GAAyCO,EAApM;EAAA,IAAwME,WAAW,GAAGP,KAAK,CAACQ,OAA5N;;EACA,IAAIC,EAAE,GAAGf,iBAAiB,CAAC,kBAAD,CAA1B;EAAA,IAAgDgB,UAAU,GAAGD,EAAE,CAACC,UAAhE;EAAA,IAA4EC,cAAc,GAAGF,EAAE,CAACD,OAAhG;;EACA,IAAII,eAAe,GAAGhB,qBAAqB,CAAC,kBAAD,CAArB,CAA0CgB,eAAhE;EACA,IAAIJ,OAAO,GAAGD,WAAW,IAAII,cAA7B;EACA,IAAIE,gBAAgB,GAAGL,OAAO,CAACM,UAAR,IAAsBnB,MAAM,CAACa,OAAO,CAACM,UAAT,CAA5B,GACjBN,OAAO,CAACM,UAAR,CAAmBC,WAAnB,EADiB,GAEjBP,OAAO,CAACM,UAFd;EAGA,IAAIE,IAAI,GAAGvB,OAAO,CAAC,YAAY;IAAE,OAAOI,aAAa,CAAC;MAAEK,QAAQ,EAAEA,QAAZ;MAAsBI,MAAM,EAAEA,MAA9B;MAAsCI,UAAU,EAAEA,UAAlD;MAA8DG,gBAAgB,EAAEA,gBAAhF;MAAkGD,eAAe,EAAEA;IAAnH,CAAD,CAApB;EAA6J,CAA5K,EAA8K,CAACF,UAAD,EAAaR,QAAb,EAAuBU,eAAvB,EAAwCN,MAAxC,EAAgDO,gBAAhD,CAA9K,CAAlB;EACA,IAAI,CAACG,IAAL,EACI,OAAO,IAAP;EACJ,OAAQxB,KAAK,CAACyB,aAAN,CAAoB,MAApB,EAA4B;IAAEC,SAAS,EAAEd,WAAb;IAA0Be,QAAQ,EAAEN,gBAApC;IAAsDO,KAAK,EAAEP;EAA7D,CAA5B,EAA6GG,IAA7G,CAAR;AACH,CAZD;;AAaA,OAAO,IAAIK,gBAAgB,GAAG7B,KAAK,CAAC8B,IAAN,CAAWvB,0BAAX,CAAvB"},"metadata":{},"sourceType":"module"}