{"ast":null,"code":"'use strict';\n\nconst XmlNode = require('./XmlNode');\n/**\nA processing instruction within an XML document.\n\n@public\n*/\n\n\nclass XmlProcessingInstruction extends XmlNode {\n  /**\n  @param {string} name\n  @param {string} [content]\n  */\n  constructor(name) {\n    let content = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    super();\n    /**\n    Name of this processing instruction. Also sometimes referred to as the\n    processing instruction \"target\".\n     @type {string}\n    @public\n    */\n\n    this.name = name;\n    /**\n    Content of this processing instruction.\n     @type {string}\n    @public\n    */\n\n    this.content = content;\n  }\n\n  get type() {\n    return XmlNode.TYPE_PROCESSING_INSTRUCTION;\n  }\n\n  toJSON() {\n    return Object.assign(XmlNode.prototype.toJSON.call(this), {\n      name: this.name,\n      content: this.content\n    });\n  }\n\n}\n\nmodule.exports = XmlProcessingInstruction;","map":{"version":3,"names":["XmlNode","require","XmlProcessingInstruction","constructor","name","content","type","TYPE_PROCESSING_INSTRUCTION","toJSON","Object","assign","prototype","call","module","exports"],"sources":["/Users/cherrie/Desktop/messenger_ver_2/node_modules/@rgrove/parse-xml/src/lib/XmlProcessingInstruction.js"],"sourcesContent":["'use strict';\n\nconst XmlNode = require('./XmlNode');\n\n/**\nA processing instruction within an XML document.\n\n@public\n*/\nclass XmlProcessingInstruction extends XmlNode {\n  /**\n  @param {string} name\n  @param {string} [content]\n  */\n  constructor(name, content = '') {\n    super();\n\n    /**\n    Name of this processing instruction. Also sometimes referred to as the\n    processing instruction \"target\".\n\n    @type {string}\n    @public\n    */\n    this.name = name;\n\n    /**\n    Content of this processing instruction.\n\n    @type {string}\n    @public\n    */\n    this.content = content;\n  }\n\n  get type() {\n    return XmlNode.TYPE_PROCESSING_INSTRUCTION;\n  }\n\n  toJSON() {\n    return Object.assign(XmlNode.prototype.toJSON.call(this), {\n      name: this.name,\n      content: this.content\n    });\n  }\n}\n\nmodule.exports = XmlProcessingInstruction;\n"],"mappings":"AAAA;;AAEA,MAAMA,OAAO,GAAGC,OAAO,CAAC,WAAD,CAAvB;AAEA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,wBAAN,SAAuCF,OAAvC,CAA+C;EAC7C;AACF;AACA;AACA;EACEG,WAAW,CAACC,IAAD,EAAqB;IAAA,IAAdC,OAAc,uEAAJ,EAAI;IAC9B;IAEA;AACJ;AACA;AACA;AACA;AACA;;IAEI,KAAKD,IAAL,GAAYA,IAAZ;IAEA;AACJ;AACA;AACA;AACA;;IAEI,KAAKC,OAAL,GAAeA,OAAf;EACD;;EAEO,IAAJC,IAAI,GAAG;IACT,OAAON,OAAO,CAACO,2BAAf;EACD;;EAEDC,MAAM,GAAG;IACP,OAAOC,MAAM,CAACC,MAAP,CAAcV,OAAO,CAACW,SAAR,CAAkBH,MAAlB,CAAyBI,IAAzB,CAA8B,IAA9B,CAAd,EAAmD;MACxDR,IAAI,EAAE,KAAKA,IAD6C;MAExDC,OAAO,EAAE,KAAKA;IAF0C,CAAnD,CAAP;EAID;;AAnC4C;;AAsC/CQ,MAAM,CAACC,OAAP,GAAiBZ,wBAAjB"},"metadata":{},"sourceType":"script"}