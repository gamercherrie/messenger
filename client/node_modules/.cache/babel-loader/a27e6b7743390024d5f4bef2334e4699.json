{"ast":null,"code":"import React, { useEffect, useState } from 'react';\nimport { CustomNotification } from './CustomNotification';\nimport { useChatContext, useTranslationContext } from '../../context';\n\nvar UnMemoizedConnectionStatus = function () {\n  var client = useChatContext('ConnectionStatus').client;\n  var t = useTranslationContext('ConnectionStatus').t;\n\n  var _a = useState(true),\n      online = _a[0],\n      setOnline = _a[1];\n\n  useEffect(function () {\n    var connectionChanged = function (_a) {\n      var _b = _a.online,\n          onlineStatus = _b === void 0 ? false : _b;\n\n      if (online !== onlineStatus) {\n        setOnline(onlineStatus);\n      }\n    };\n\n    client.on('connection.changed', connectionChanged);\n    return function () {\n      return client.off('connection.changed', connectionChanged);\n    };\n  }, [client, online]);\n  return React.createElement(CustomNotification, {\n    active: !online,\n    type: 'error'\n  }, t('Connection failure, reconnecting now...'));\n};\n\nexport var ConnectionStatus = React.memo(UnMemoizedConnectionStatus);","map":{"version":3,"names":["React","useEffect","useState","CustomNotification","useChatContext","useTranslationContext","UnMemoizedConnectionStatus","client","t","_a","online","setOnline","connectionChanged","_b","onlineStatus","on","off","createElement","active","type","ConnectionStatus","memo"],"sources":["/Users/cherrie/Desktop/messenger_ver_2/client/node_modules/stream-chat-react/dist/components/MessageList/ConnectionStatus.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { CustomNotification } from './CustomNotification';\nimport { useChatContext, useTranslationContext } from '../../context';\nvar UnMemoizedConnectionStatus = function () {\n    var client = useChatContext('ConnectionStatus').client;\n    var t = useTranslationContext('ConnectionStatus').t;\n    var _a = useState(true), online = _a[0], setOnline = _a[1];\n    useEffect(function () {\n        var connectionChanged = function (_a) {\n            var _b = _a.online, onlineStatus = _b === void 0 ? false : _b;\n            if (online !== onlineStatus) {\n                setOnline(onlineStatus);\n            }\n        };\n        client.on('connection.changed', connectionChanged);\n        return function () { return client.off('connection.changed', connectionChanged); };\n    }, [client, online]);\n    return (React.createElement(CustomNotification, { active: !online, type: 'error' }, t('Connection failure, reconnecting now...')));\n};\nexport var ConnectionStatus = React.memo(UnMemoizedConnectionStatus);\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,kBAAT,QAAmC,sBAAnC;AACA,SAASC,cAAT,EAAyBC,qBAAzB,QAAsD,eAAtD;;AACA,IAAIC,0BAA0B,GAAG,YAAY;EACzC,IAAIC,MAAM,GAAGH,cAAc,CAAC,kBAAD,CAAd,CAAmCG,MAAhD;EACA,IAAIC,CAAC,GAAGH,qBAAqB,CAAC,kBAAD,CAArB,CAA0CG,CAAlD;;EACA,IAAIC,EAAE,GAAGP,QAAQ,CAAC,IAAD,CAAjB;EAAA,IAAyBQ,MAAM,GAAGD,EAAE,CAAC,CAAD,CAApC;EAAA,IAAyCE,SAAS,GAAGF,EAAE,CAAC,CAAD,CAAvD;;EACAR,SAAS,CAAC,YAAY;IAClB,IAAIW,iBAAiB,GAAG,UAAUH,EAAV,EAAc;MAClC,IAAII,EAAE,GAAGJ,EAAE,CAACC,MAAZ;MAAA,IAAoBI,YAAY,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,KAAhB,GAAwBA,EAA3D;;MACA,IAAIH,MAAM,KAAKI,YAAf,EAA6B;QACzBH,SAAS,CAACG,YAAD,CAAT;MACH;IACJ,CALD;;IAMAP,MAAM,CAACQ,EAAP,CAAU,oBAAV,EAAgCH,iBAAhC;IACA,OAAO,YAAY;MAAE,OAAOL,MAAM,CAACS,GAAP,CAAW,oBAAX,EAAiCJ,iBAAjC,CAAP;IAA6D,CAAlF;EACH,CATQ,EASN,CAACL,MAAD,EAASG,MAAT,CATM,CAAT;EAUA,OAAQV,KAAK,CAACiB,aAAN,CAAoBd,kBAApB,EAAwC;IAAEe,MAAM,EAAE,CAACR,MAAX;IAAmBS,IAAI,EAAE;EAAzB,CAAxC,EAA4EX,CAAC,CAAC,yCAAD,CAA7E,CAAR;AACH,CAfD;;AAgBA,OAAO,IAAIY,gBAAgB,GAAGpB,KAAK,CAACqB,IAAN,CAAWf,0BAAX,CAAvB"},"metadata":{},"sourceType":"module"}