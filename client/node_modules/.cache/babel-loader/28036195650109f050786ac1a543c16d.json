{"ast":null,"code":"import { useMemo, useRef } from 'react';\nexport function usePrependedMessagesCount(messages, hasDateSeparator) {\n  var _a;\n\n  var firstRealMessageIndex = hasDateSeparator ? 1 : 0;\n  var currentFirstMessageId = (_a = messages === null || messages === void 0 ? void 0 : messages[firstRealMessageIndex]) === null || _a === void 0 ? void 0 : _a.id;\n  var firstMessageId = useRef(currentFirstMessageId);\n  var earliestMessageId = useRef(currentFirstMessageId);\n  var previousNumItemsPrepended = useRef(0);\n  var numItemsPrepended = useMemo(function () {\n    if (!messages || !messages.length) {\n      return 0;\n    } // if no new messages were prepended, return early (same amount as before)\n\n\n    if (currentFirstMessageId === earliestMessageId.current) {\n      return previousNumItemsPrepended.current;\n    }\n\n    if (!firstMessageId.current) {\n      firstMessageId.current = currentFirstMessageId;\n    }\n\n    earliestMessageId.current = currentFirstMessageId; // if new messages were prepended, find out how many\n    // start with this number because there cannot be fewer prepended items than before\n\n    for (var i = previousNumItemsPrepended.current; i < messages.length; i += 1) {\n      if (messages[i].id === firstMessageId.current) {\n        previousNumItemsPrepended.current = i;\n        return i;\n      }\n    } // if no match has found, we have jumped\n\n\n    firstMessageId.current = currentFirstMessageId;\n    return 0; // TODO: there's a bug here, the messages prop is the same array instance (something mutates it)\n    // that's why the second dependency is necessary\n  }, [messages, messages === null || messages === void 0 ? void 0 : messages.length]);\n  return numItemsPrepended;\n}","map":{"version":3,"names":["useMemo","useRef","usePrependedMessagesCount","messages","hasDateSeparator","_a","firstRealMessageIndex","currentFirstMessageId","id","firstMessageId","earliestMessageId","previousNumItemsPrepended","numItemsPrepended","length","current","i"],"sources":["/Users/cherrie/Desktop/messenger_ver_2/client/node_modules/stream-chat-react/dist/components/MessageList/hooks/usePrependMessagesCount.js"],"sourcesContent":["import { useMemo, useRef } from 'react';\nexport function usePrependedMessagesCount(messages, hasDateSeparator) {\n    var _a;\n    var firstRealMessageIndex = hasDateSeparator ? 1 : 0;\n    var currentFirstMessageId = (_a = messages === null || messages === void 0 ? void 0 : messages[firstRealMessageIndex]) === null || _a === void 0 ? void 0 : _a.id;\n    var firstMessageId = useRef(currentFirstMessageId);\n    var earliestMessageId = useRef(currentFirstMessageId);\n    var previousNumItemsPrepended = useRef(0);\n    var numItemsPrepended = useMemo(function () {\n        if (!messages || !messages.length) {\n            return 0;\n        }\n        // if no new messages were prepended, return early (same amount as before)\n        if (currentFirstMessageId === earliestMessageId.current) {\n            return previousNumItemsPrepended.current;\n        }\n        if (!firstMessageId.current) {\n            firstMessageId.current = currentFirstMessageId;\n        }\n        earliestMessageId.current = currentFirstMessageId;\n        // if new messages were prepended, find out how many\n        // start with this number because there cannot be fewer prepended items than before\n        for (var i = previousNumItemsPrepended.current; i < messages.length; i += 1) {\n            if (messages[i].id === firstMessageId.current) {\n                previousNumItemsPrepended.current = i;\n                return i;\n            }\n        }\n        // if no match has found, we have jumped\n        firstMessageId.current = currentFirstMessageId;\n        return 0;\n        // TODO: there's a bug here, the messages prop is the same array instance (something mutates it)\n        // that's why the second dependency is necessary\n    }, [messages, messages === null || messages === void 0 ? void 0 : messages.length]);\n    return numItemsPrepended;\n}\n"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,MAAlB,QAAgC,OAAhC;AACA,OAAO,SAASC,yBAAT,CAAmCC,QAAnC,EAA6CC,gBAA7C,EAA+D;EAClE,IAAIC,EAAJ;;EACA,IAAIC,qBAAqB,GAAGF,gBAAgB,GAAG,CAAH,GAAO,CAAnD;EACA,IAAIG,qBAAqB,GAAG,CAACF,EAAE,GAAGF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACG,qBAAD,CAAlE,MAA+F,IAA/F,IAAuGD,EAAE,KAAK,KAAK,CAAnH,GAAuH,KAAK,CAA5H,GAAgIA,EAAE,CAACG,EAA/J;EACA,IAAIC,cAAc,GAAGR,MAAM,CAACM,qBAAD,CAA3B;EACA,IAAIG,iBAAiB,GAAGT,MAAM,CAACM,qBAAD,CAA9B;EACA,IAAII,yBAAyB,GAAGV,MAAM,CAAC,CAAD,CAAtC;EACA,IAAIW,iBAAiB,GAAGZ,OAAO,CAAC,YAAY;IACxC,IAAI,CAACG,QAAD,IAAa,CAACA,QAAQ,CAACU,MAA3B,EAAmC;MAC/B,OAAO,CAAP;IACH,CAHuC,CAIxC;;;IACA,IAAIN,qBAAqB,KAAKG,iBAAiB,CAACI,OAAhD,EAAyD;MACrD,OAAOH,yBAAyB,CAACG,OAAjC;IACH;;IACD,IAAI,CAACL,cAAc,CAACK,OAApB,EAA6B;MACzBL,cAAc,CAACK,OAAf,GAAyBP,qBAAzB;IACH;;IACDG,iBAAiB,CAACI,OAAlB,GAA4BP,qBAA5B,CAXwC,CAYxC;IACA;;IACA,KAAK,IAAIQ,CAAC,GAAGJ,yBAAyB,CAACG,OAAvC,EAAgDC,CAAC,GAAGZ,QAAQ,CAACU,MAA7D,EAAqEE,CAAC,IAAI,CAA1E,EAA6E;MACzE,IAAIZ,QAAQ,CAACY,CAAD,CAAR,CAAYP,EAAZ,KAAmBC,cAAc,CAACK,OAAtC,EAA+C;QAC3CH,yBAAyB,CAACG,OAA1B,GAAoCC,CAApC;QACA,OAAOA,CAAP;MACH;IACJ,CAnBuC,CAoBxC;;;IACAN,cAAc,CAACK,OAAf,GAAyBP,qBAAzB;IACA,OAAO,CAAP,CAtBwC,CAuBxC;IACA;EACH,CAzB8B,EAyB5B,CAACJ,QAAD,EAAWA,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACU,MAAxE,CAzB4B,CAA/B;EA0BA,OAAOD,iBAAP;AACH"},"metadata":{},"sourceType":"module"}