{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport React, { useContext } from 'react';\nexport var ChannelActionContext = React.createContext(undefined);\nexport var ChannelActionProvider = function (_a) {\n  var children = _a.children,\n      value = _a.value;\n  return React.createElement(ChannelActionContext.Provider, {\n    value: value\n  }, children);\n};\nexport var useChannelActionContext = function (componentName) {\n  var contextValue = useContext(ChannelActionContext);\n\n  if (!contextValue) {\n    console.warn(\"The useChannelActionContext hook was called outside of the ChannelActionContext provider. Make sure this hook is called within a child of the Channel component. The errored call is located in the \" + componentName + \" component.\");\n    return {};\n  }\n\n  return contextValue;\n};\n/**\n * Typescript currently does not support partial inference, so if ChannelActionContext\n * typing is desired while using the HOC withChannelActionContext, the Props for the\n * wrapped component must be provided as the first generic.\n */\n\nexport var withChannelActionContext = function (Component) {\n  var WithChannelActionContextComponent = function (props) {\n    var channelActionContext = useChannelActionContext();\n    return React.createElement(Component, __assign({}, props, channelActionContext));\n  };\n\n  WithChannelActionContextComponent.displayName = (Component.displayName || Component.name || 'Component').replace('Base', '');\n  return WithChannelActionContextComponent;\n};","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","React","useContext","ChannelActionContext","createContext","undefined","ChannelActionProvider","_a","children","value","createElement","Provider","useChannelActionContext","componentName","contextValue","console","warn","withChannelActionContext","Component","WithChannelActionContextComponent","props","channelActionContext","displayName","name","replace"],"sources":["/Users/cherrie/Desktop/messenger_ver_2/node_modules/stream-chat-react/dist/context/ChannelActionContext.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport React, { useContext } from 'react';\nexport var ChannelActionContext = React.createContext(undefined);\nexport var ChannelActionProvider = function (_a) {\n    var children = _a.children, value = _a.value;\n    return (React.createElement(ChannelActionContext.Provider, { value: value }, children));\n};\nexport var useChannelActionContext = function (componentName) {\n    var contextValue = useContext(ChannelActionContext);\n    if (!contextValue) {\n        console.warn(\"The useChannelActionContext hook was called outside of the ChannelActionContext provider. Make sure this hook is called within a child of the Channel component. The errored call is located in the \" + componentName + \" component.\");\n        return {};\n    }\n    return contextValue;\n};\n/**\n * Typescript currently does not support partial inference, so if ChannelActionContext\n * typing is desired while using the HOC withChannelActionContext, the Props for the\n * wrapped component must be provided as the first generic.\n */\nexport var withChannelActionContext = function (Component) {\n    var WithChannelActionContextComponent = function (props) {\n        var channelActionContext = useChannelActionContext();\n        return React.createElement(Component, __assign({}, props, channelActionContext));\n    };\n    WithChannelActionContextComponent.displayName = (Component.displayName ||\n        Component.name ||\n        'Component').replace('Base', '');\n    return WithChannelActionContextComponent;\n};\n"],"mappings":"AAAA,IAAIA,QAAQ,GAAI,QAAQ,KAAKA,QAAd,IAA2B,YAAY;EAClDA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAASC,CAAT,EAAY;IACpC,KAAK,IAAIC,CAAJ,EAAOC,CAAC,GAAG,CAAX,EAAcC,CAAC,GAAGC,SAAS,CAACC,MAAjC,EAAyCH,CAAC,GAAGC,CAA7C,EAAgDD,CAAC,EAAjD,EAAqD;MACjDD,CAAC,GAAGG,SAAS,CAACF,CAAD,CAAb;;MACA,KAAK,IAAII,CAAT,IAAcL,CAAd,EAAiB,IAAIH,MAAM,CAACS,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,CAAJ,EACbN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;IACP;;IACD,OAAON,CAAP;EACH,CAPD;;EAQA,OAAOH,QAAQ,CAACa,KAAT,CAAe,IAAf,EAAqBN,SAArB,CAAP;AACH,CAVD;;AAWA,OAAOO,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAO,IAAIC,oBAAoB,GAAGF,KAAK,CAACG,aAAN,CAAoBC,SAApB,CAA3B;AACP,OAAO,IAAIC,qBAAqB,GAAG,UAAUC,EAAV,EAAc;EAC7C,IAAIC,QAAQ,GAAGD,EAAE,CAACC,QAAlB;EAAA,IAA4BC,KAAK,GAAGF,EAAE,CAACE,KAAvC;EACA,OAAQR,KAAK,CAACS,aAAN,CAAoBP,oBAAoB,CAACQ,QAAzC,EAAmD;IAAEF,KAAK,EAAEA;EAAT,CAAnD,EAAqED,QAArE,CAAR;AACH,CAHM;AAIP,OAAO,IAAII,uBAAuB,GAAG,UAAUC,aAAV,EAAyB;EAC1D,IAAIC,YAAY,GAAGZ,UAAU,CAACC,oBAAD,CAA7B;;EACA,IAAI,CAACW,YAAL,EAAmB;IACfC,OAAO,CAACC,IAAR,CAAa,yMAAyMH,aAAzM,GAAyN,aAAtO;IACA,OAAO,EAAP;EACH;;EACD,OAAOC,YAAP;AACH,CAPM;AAQP;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIG,wBAAwB,GAAG,UAAUC,SAAV,EAAqB;EACvD,IAAIC,iCAAiC,GAAG,UAAUC,KAAV,EAAiB;IACrD,IAAIC,oBAAoB,GAAGT,uBAAuB,EAAlD;IACA,OAAOX,KAAK,CAACS,aAAN,CAAoBQ,SAApB,EAA+B/B,QAAQ,CAAC,EAAD,EAAKiC,KAAL,EAAYC,oBAAZ,CAAvC,CAAP;EACH,CAHD;;EAIAF,iCAAiC,CAACG,WAAlC,GAAgD,CAACJ,SAAS,CAACI,WAAV,IAC7CJ,SAAS,CAACK,IADmC,IAE7C,WAF4C,EAE/BC,OAF+B,CAEvB,MAFuB,EAEf,EAFe,CAAhD;EAGA,OAAOL,iCAAP;AACH,CATM"},"metadata":{},"sourceType":"module"}